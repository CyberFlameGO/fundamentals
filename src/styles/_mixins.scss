// Mixins
// ======================================

// Accessibility
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  white-space: nowrap;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  clip-path: inset(50%);
}

@mixin sr-only-focusable {

  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    white-space: normal;
    overflow: visible;
    clip: auto;
    clip-path: none;
  }
}

// Breakpoints
@mixin screen-legacy-max {
  @media screen and (max-width: $screen-legacy-max) {
    @content;
  }
}

@mixin screen-xs-max {
  @media screen and (max-width: $screen-xs-max) {
    @content;
  }
}

@mixin screen-sm-min {
  @media screen and (min-width: $screen-sm) {
    @content;
  }
}

@mixin screen-sm-max {
  @media screen and (max-width: $screen-sm-max) {
    @content;
  }
}

@mixin screen-md-min {
  @media screen and (min-width: $screen-md) {
    @content;
  }
}

@mixin screen-md-max {
  @media screen and (max-width: $screen-md-max) {
    @content;
  }
}

@mixin screen-lg-min {
  @media screen and (min-width: $screen-lg) {
    @content;
  }
}

@mixin screen-lg-max {
  @media screen and (max-width: $screen-lg-max) {
    @content;
  }
}

@mixin screen-xl-min {
  @media screen and (min-width: $screen-xl) {
    @content;
  }
}

@mixin screen-tablet-only {
  @media screen and (min-width: $screen-md) and (max-width: $screen-lg) {
    @content;
  }
}

// Buttons
@mixin button {
  @include transition(all 400ms ease);

  display: inline-block;
  padding: $button__padding;
  border: $button__border-width $button__border-style transparent;
  border-radius: $button__border-radius;
  background-color: transparent;
  color: $link__color;
  font-family: $button__font-family;
  font-size: $button__font-size;
  font-weight: $button__font-weight;
  line-height: 1;
  text-align: center;
  text-decoration: none;

  &:active,
  &:focus,
  &:hover {
    @include transition(all 300ms ease, box-shadow 600ms ease);

    color: $link__color;
    box-shadow: $shadow-button;
  }
}

@mixin button-primary {
  border: $button__border-width $button__border-style $button__primary-background;
  background-color: $button__primary-background;
  color: $button__primary-color;

  &:active,
  &:focus,
  &:hover {
    border-color: $button__primary-background--active;
    background-color: $button__primary-background--active;
    color: $button__primary-color--active;
  }
}

@mixin button-secondary {
  border: $button__border-width $button__border-style $button__secondary-color;
  background-color: $button__secondary-background;
  color: $button__secondary-color;

  &:active,
  &:focus,
  &:hover {
    border-color: $button__secondary-background--active;
    background-color: $button__secondary-background--active;
    color: $button__secondary-color--active;
  }
}

@mixin button-group {
  @include make-row(false);
  @include align-items(flex-start);

  li {
    @include screen-sm-min {
      &:last-child {

        .button {
          margin-right: 0;
        }
      }
    }
  }

  .button {
    @include screen-sm-min {
      width: auto;
      margin-right: $gutter-width / 2;
    }
    @include display(flex);
    @include justify-content(center);
    @include order(2);

    width: 100%;
  }

  .button-primary {
    @include order(1);
  }
}

// Background
@mixin full-width-background {
  position: relative;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
}

// Cards
@mixin card {
  @include display(flex);
  @include flex-direction(column);
  @include transition(transform 400ms ease, background-color 400ms ease, box-shadow 400ms ease);

  height: 100%;
  border: $interface__border;
  background-color: $interface__background-color;

  &:active,
  &:focus,
  &:hover {
    @include transition(transform 400ms ease, background-color 400ms ease, box-shadow 400ms ease);
    @include transform(translateY(-2%));

    background-color: $interface__background-color--active;
    box-shadow: $shadow-card;
  }
}

// Container
@mixin make-container {
  @include screen-md-min {
    max-width: $screen-md - $gutter-width;
  }
  @include screen-lg-min {
    max-width: $screen-lg - $gutter-width;
  }
  @include screen-xl-min {
    max-width: $screen-xl - $gutter-width;
  }

  position: relative;
  width: 100%;
  max-height: 100%;
  margin: 0 auto;
  padding-right: ($gutter-width / 2);
  padding-left: ($gutter-width / 2);
}

// Rows
@mixin make-row($negative-margins: true) {
  @include display(flex);
  @include flex-wrap(wrap);

  &:after,
  &:before {
    @include flex-basis(0);
    order: 1;
  }

  @if $negative-margins == true {
    margin-right: $gutter-width / -2;
    margin-left:  $gutter-width / -2;
    padding-right: 0;
    padding-left: 0;
  }
}

// Columns
@mixin column($add-gutter) {
  position: relative;
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we use `flex` values
  // later on to override this initial width.
  width: 100%;
  min-height: 1px; // Prevent collapsing
  @if $add-gutter == true {
    padding-right: $gutter-width / 2;
    padding-left: $gutter-width / 2;
  }
}

@mixin make-col($size, $add-gutter: true, $columns: $grid-columns) {
  @include column($add-gutter);

  flex: 0 0 percentage($size / $columns);
  max-width: percentage($size / $columns);
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  margin-left: percentage($size / $columns);
}

@mixin make-col-push($size, $columns: $grid-columns) {
  left: if($size > 0, percentage($size / $columns), auto);
}

@mixin make-col-pull($size, $columns: $grid-columns) {
  right: if($size > 0, percentage($size / $columns), auto);
}

// Dropdown
@mixin dropdown($trigger) {
  position: absolute;
  top: 100%;
  right: -15px;
  box-shadow: $shadow-3;
  opacity: 0;
  visibility: hidden;
  z-index: z-index(page-background);

  // Parent 'state' classname to modify the targets properties
  #{$trigger} & {
    @include transition(all 0.3s ease-in-out 0s, visibility 0s linear 600ms, z-index 0s linear 0.01s);
    @include transform(translateY(-1em));
    @include transform(translateY(0%));
    @include transition-delay(0s);

    opacity: 1;
    visibility: visible;
    z-index: z-index(navigation--foreground);
  }
}

// Floats
@mixin clearfix {

  &:before,
  &:after {
    display: table;
    content: "";
  }

  &:after {
    clear: both;
  }
}

// Forms
@mixin form-group {
  @include make-row(false);
  @include align-items(center);

  margin: 0 0 $gutter-width / 2;

  label {
    @include screen-sm-max {
      width: 100%;
      margin-right: 0;

      &:first-child {
        margin-bottom: $gutter-width / 2;
      }
    }

    margin-right: $gutter-width / 2;

    &:only-of-type {
      width: auto;
      margin-right: 0;
      margin-bottom: 0;
    }
  }

  .button {
    @include screen-sm-max {
      display: block;
      width: 100%;
    }
  }

  .form__notice {
    margin: 0;
  }
}

@mixin form-label {
  @include flex-grow(1);

  color: $body__text-color;
  font-size: .75rem;
  font-weight: bold;
  line-height: 2;

  &:last-child {
    margin-right: 0;
  }

  input,
  textarea {
    display: block;
  }

  input {

    &[type="checkbox"] {
      display: inline-block;
      width: auto;
      margin-right: 5px;
      font-size: 1rem;
    }
  }
}

@mixin form-select-label {
  display: inline-block;
  position: relative;

  &:after {
    @include transform(translatey(-50%));

    display: block;
    position: absolute;
    top: 50%;
    right: 14px;
    width: 8px;
    height: 8px;
    font-family: $icon__font-family;
    font-size: 1.2rem;
    content: "\f0d7";
    z-index: z-index(element--middleground);
    pointer-events: none;
  }
}

@mixin form-select-no-label {
  display: inline-block;
  position: relative;

  &:after {
    @include transform(translatey(-50%));

    display: block;
    position: absolute;
    top: 50%;
    right: 14px;
    font-family: $icon__font-family;
    font-size: 1rem;
    content: "\f0d7";
    z-index: z-index(element--background);
    pointer-events: none;
  }
}

@mixin form-control {
  display: block;
  width: 100%;
  padding: $form__control-padding;
  border: $interface__border;
  border-radius: 0;
  background-color: $form__input-background-color;
  font-size: 1rem;
  line-height: normal;

  &[readonly] {
    background-color: $form__input-disabled;
  }
}

// Page Padding
@mixin page-padding($padding-top: $gutter-width * 2, $padding-bottom: $gutter-width * 2) {
  @include screen-md-min {
    padding-top: $padding-top;
    padding-bottom: $padding-bottom;
  }

  padding-top: $padding-top / 2;
  padding-bottom: $padding-bottom / 2;
}

// Section Presets
@mixin section-color-preset($background-color: $white, $heading-color: $black, $subheading-color: gray-scale(7), $text-color: gray-scale(7)) {
  background-color: $background-color;

  .section__heading {
    color: $heading-color;
  }

  .section__subheading {
    color: $subheading-color;
  }

  .section__body {
    color: $text-color;

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      color: $text-color;
    }
  }
}

@mixin section-color-preset-override($property) {

  .section-color-preset__banner & {
    #{$property}: $banner-text-color;
  }

  .section-color-preset__primary & {
    #{$property}: $primary-text-color;
  }

  .section-color-preset__secondary & {
    #{$property}: $secondary-text-color;
  }

  .section-color-preset__tertiary & {
    #{$property}: $tertiary-text-color;
  }
}

// Section Height
@mixin section-height($padding-top: $section-height__large, $padding-bottom: $padding-top) {

  & > [class*="__container"] {
    @include screen-lg-min {
      padding-top: $padding-top;
      padding-bottom: $padding-bottom;
    }

    padding-top: $padding-top / 2;
    padding-bottom: $padding-bottom / 2;
  }
}

// Transition Prefixer
@mixin trans-prefix($value, $prefix: "") {
  $slice: str-slice(inspect($value), 0, 9);
  @if $slice == "transform" {
    #{$prefix}transition: #{$prefix}#{$value};
  } @else {
    #{$prefix}transition: $value;
  }
}

// Override transition mixin due to libsass issues
// Details: https://github.com/thoughtbot/bourbon/issues/794
@mixin transition($properties...) {
  @if length($properties) > 1 {
    $spec:              ();
    @for $i from 1 through length($properties) {
      $spec: append($spec, nth($properties, $i), comma);
    }
  } @else {
    $spec: $properties;
  }
  @include trans-prefix($spec, -webkit-);
  @include trans-prefix($spec, -moz-);
  @include trans-prefix($spec);
}

// Typography
@mixin heading {
  margin: 0 0 $gutter-width * .785;
  font-family: $heading__font-family;
  font-weight: $heading__font-weight;
  line-height: $heading__line-height;
}

@mixin subheading {
  font-family: $subheading__font-family;
  font-weight: $subheading__font-weight;
  line-height: $heading__line-height;
}
